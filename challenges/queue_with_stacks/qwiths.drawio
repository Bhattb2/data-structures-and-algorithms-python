<mxfile host="65bd71144e" modified="2021-01-16T03:39:38.857Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.52.1 Chrome/83.0.4103.122 Electron/9.3.5 Safari/537.36" version="13.10.0" etag="SdyxMY5ivjEqK_l0qnjx" type="embed">
    <diagram id="Q2zel-gjdDoWsmsXc8WV" name="Page-1">
        <mxGraphModel dx="1987" dy="790" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1400" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="2" value="&lt;font style=&quot;font-size: 14px&quot;&gt;&lt;font color=&quot;#ff8000&quot;&gt;&lt;b&gt;Queue of stacks&lt;/b&gt;&lt;br&gt;&lt;br&gt;Input:&lt;/font&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;Arg:5&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;Output:&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;font color=&quot;#ff8000&quot;&gt;Class Stack:&lt;br&gt;&lt;/font&gt;&amp;nbsp; &amp;nbsp;&lt;font color=&quot;#ff8000&quot;&gt; Def__init__(self):&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.top = None&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp; Def push(self, value):&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; New_node = Node(value)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if self.top:&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; New.node.next = self.top&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Self.top = new_node&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp; Def pop(self)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; If self.top:&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Temp = self.top&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Self.top = Self.top.next&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Temp.next = None&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Return temp.value&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Else:&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Raise AttributeError&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp; Def peek(self):&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; If self.top:&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Return self.top.value&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Else:&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Raise AttributeError&lt;/font&gt;&lt;br&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;align=left;verticalAlign=top;" vertex="1" parent="1">
                    <mxGeometry x="-800" y="40" width="470" height="590" as="geometry"/>
                </mxCell>
                <mxCell id="3" value="&lt;font color=&quot;#ff8000&quot;&gt;10-15-20&lt;/font&gt;" style="ellipse;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="-800" y="100" width="100" height="20" as="geometry"/>
                </mxCell>
                <mxCell id="4" value="&lt;font color=&quot;#ff8000&quot;&gt;5- 10-15-20&lt;/font&gt;" style="ellipse;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="-790" y="180" width="120" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="5" value="&lt;font color=&quot;#ff8000&quot; style=&quot;font-size: 14px&quot;&gt;&lt;br&gt;Def peek(self):&lt;br&gt;&amp;nbsp; &amp;nbsp; If self.top:&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Return self.top.value&lt;br&gt;&amp;nbsp; &amp;nbsp; Else:&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Raise AttributeError&lt;br&gt;&lt;br&gt;&lt;br&gt;Class PseudoQueue:&lt;br&gt;&amp;nbsp; &amp;nbsp; __init__(self)&lt;br&gt;&amp;nbsp; &amp;nbsp; Self.stck1 = Stack()&lt;br&gt;&amp;nbsp; &amp;nbsp; Self.stck2 = Stack()&lt;br&gt;&lt;br&gt;Def enquue(self, value):&lt;br&gt;&amp;nbsp; &amp;nbsp; while self.stck1.top:&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.stck2.push(self.stck1.pop())&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp; self.stck1.push(value)&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp; while self.stck2.top:&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.stck1.push(self.stck2.pop())&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; self.stck2.pop()&lt;br&gt;&lt;br&gt;Def dequeueself():&lt;br&gt;&amp;nbsp; &amp;nbsp; if len(self.stck1) == 0:&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; print('The queue is Empty')&lt;br&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp; return self.stck1.pop()&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/font&gt;" style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=middle;points=[];fillColor=none;strokeColor=none;rounded=0;" vertex="1" parent="1">
                    <mxGeometry x="-580" y="55" width="240" height="460" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>